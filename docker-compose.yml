services:
  notification-dispatcher:
    image: notification-dispatcher:latest
    build:
      context: ./notification-dispatcher
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-dispatcher:5432/db_dispatcher
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_DATASOURCE_INITIALIZATION_MODE: always
    depends_on:
      db-dispatcher:
        condition: service_healthy
    networks:
      - app-network

  db-dispatcher:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: db_dispatcher
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db_dispatcher"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  db-gateway:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: db_gateway
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db_gateway" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5433:5432"
    volumes:
      - gateway_data:/var/lib/postgresql/data
    networks:
      - app-network

  db-tracker:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: db_tracker
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db_tracker" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "5434:5432"
    volumes:
      - tracker_data:/var/lib/postgresql/data
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_NODE_ID: 1
      CLUSTER_ID: gJYuAA2fTjGFZKPoFtVsIw
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:9093
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - app-network


volumes:
  postgres_data:
  gateway_data:
  tracker_data:
  kafka_data:
  redis_data:

networks:
  app-network:
    driver: bridge